cmake_minimum_required (VERSION 3.15)

project(window)

set(CMAKE_CXX_STANDARD 20)

set(SOURCE main.cpp swindow.cpp sbutton.cpp)
set(HEADER swindow.h sbutton.h)

add_executable(${PROJECT_NAME} ${SOURCE} ${HEADER})

if (WIN32)
set(TARGET_CL_BIT x86)
if (CMAKE_CL_64)
    set(TARGET_CL_BIT x64)
endif()

function(add_win_lib libname)
    set(${libname}_LIBDIR_PREFIX "/${libname}/lib/${TARGET_CL_BIT}")
    set(${libname}_INCLUDE_PREFIX "/${libname}/include")
    file(GLOB ${libname}_RUNTIME_DLL "${CMAKE_CURRENT_SOURCE_DIR}${${libname}_LIBDIR_PREFIX}/*.dll")
    file(GLOB ${libname}_BUILD_LIB "${CMAKE_CURRENT_SOURCE_DIR}${${libname}_LIBDIR_PREFIX}/*.lib")

    set(${libname}_LIBS)
    foreach(file_path ${${libname}_BUILD_LIB})
        string(REGEX REPLACE ".+/(.+)\\..*" "\\1" file_name ${file_path})
        set(${libname}_LIBS ${${libname}_LIBS} ${file_name})
    endforeach(file_path)

    target_link_directories(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}${${libname}_LIBDIR_PREFIX}")
    target_include_directories(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}${${libname}_INCLUDE_PREFIX}")

    file(COPY ${${libname}_RUNTIME_DLL}
        DESTINATION  ${CMAKE_CURRENT_BINARY_DIR})

    target_link_libraries(${PROJECT_NAME} PUBLIC ${${libname}_LIBS})
endfunction(add_wind_lib)

add_win_lib(SDL2)
add_win_lib(SDL2_image)
endif() #WIN32

target_link_directories(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}${SDL_LIBDIR_PREFIX}")
target_include_directories(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}${SDL_INCLUDE_PREFIX}")

target_link_libraries(${PROJECT_NAME} PUBLIC ${LIBS})
